---
title: "Data Exploration"
author: "Heather Anderson"
format:
  html:
    link-external-icon: true
    link-external-newwindow: true
course: Capstone Projects in Data Science
self-contained: true
execute: 
  warning: false
  message: false
editor: 
  markdown: 
    wrap: 72
theme: united
---

## Dataset 1

<https://www.kaggle.com/datasets/sriharshaeedala/airline-delay?resource=download>

```{r}
library(dplyr)
library(knitr)
```

```{r}
AirlineDelays <- read.csv("Airline_Delay_Cause.csv")
head(AirlineDelays)
```

```{r}
dim(AirlineDelays)
```

This dataset provides information on flight arrivals and delays at U.S.
airports, sorted by airline carriers. It includes details like the
number of arriving flights, delays over 15 minutes, cancellations, and
diversions. It also shows the reasons for delays, such as airline
issues, weather, airspace factors, security, and late arrivals. You can
use this dataset to analyze how different airlines perform at various
airports and understand what causes delays in the aviation industry.

**Columns:**

-   **year:** The year of the data.

-   **month:** The month of the data.

-   **carrier:** Carrier code.

-   **carrier_name:** Carrier name.

-   **airport:** Airport code.

-   **airport_name:** Airport name.

-   **arr_flights:** Number of arriving flights.

-   **arr_del15:** Number of flights delayed by 15 minutes or more.

-   **carrier_ct:** Carrier count (delay due to the carrier).

-   **weather_ct:** Weather count (delay due to weather).

-   **nas_ct:** NAS (National Airspace System) count (delay due to the
    NAS).

-   **security_ct:** Security count (delay due to security).

-   **late_aircraft_ct:** Late aircraft count (delay due to late
    aircraft arrival).

-   **arr_cancelled:** Number of flights canceled.

-   **arr_diverted:** Number of flights diverted.

-   **arr_delay:** Total arrival delay.

-   **carrier_delay:** Delay attributed to the carrier.

-   **weather_delay:** Delay attributed to weather.

-   **nas_delay:** Delay attributed to the NAS.

-   **security_delay:** Delay attributed to security.

-   **late_aircraft_delay:** Delay attributed to late aircraft arrival.

```{r}
tail(AirlineDelays)
```

```{r}
min_delay_value <- min(AirlineDelays$arr_delay, na.rm = TRUE)
min_delay_value
```

```{r}
delayed_summary <- AirlineDelays %>%
  summarise(
    total_delayed_flights = sum(arr_delay > 0, na.rm = TRUE),
    count_15_to_30 = sum(arr_delay > 15 & arr_delay <= 30, na.rm = TRUE),
    count_30_to_60 = sum(arr_delay > 30 & arr_delay <= 60, na.rm = TRUE),
    count_over_60 = sum(arr_delay > 60, na.rm = TRUE)
  )

print(delayed_summary)
```

```{r}
# List unique carriers
unique_carriers <- AirlineDelays %>%
  distinct(carrier, carrier_name)  # You can include carrier_name for more clarity

# Display the unique carriers
print(unique_carriers)
```

```{r}
# Count the total number of delayed flights
total_delayed_flights <- AirlineDelays %>%
  filter(arr_delay > 0) %>%
  summarise(total_delays = n())

# Display the total number of delayed flights
print(total_delayed_flights)
```

```{r}
total_arrived_flights_corrected <- AirlineDelays %>%
  group_by(carrier, airport) %>%
  summarise(arrived_flights = sum(arr_flights, na.rm = TRUE)) %>%
  summarise(total_flights = sum(arrived_flights))

print(total_arrived_flights_corrected)
```

```{r}
library(dplyr)
library(knitr)

# Summarize the dataset by carrier
carrier_summary <- AirlineDelays %>%
  group_by(carrier) %>%
  summarise(
    total_flights = sum(arr_flights, na.rm = TRUE),
    total_delayed_flights = sum(arr_del15, na.rm = TRUE)  # Total delayed flights (15 minutes or more)
  )

# Calculate total metrics for August
total_arrived_flights <- sum(AirlineDelays$arr_flights, na.rm = TRUE)
total_cancelled_flights <- sum(AirlineDelays$arr_cancelled, na.rm = TRUE)
total_diverted_flights <- sum(AirlineDelays$arr_diverted, na.rm = TRUE)

# Total delayed flights (where arr_del15 > 0)
total_delayed_flights <- sum(AirlineDelays$arr_del15, na.rm = TRUE)

# Breakdown of reasons for delays
delay_reasons <- AirlineDelays %>%
  summarise(
    carrier_delay = sum(carrier_ct, na.rm = TRUE),
    weather_delay = sum(weather_ct, na.rm = TRUE),
    nas_delay = sum(nas_ct, na.rm = TRUE),
    security_delay = sum(security_ct, na.rm = TRUE),
    late_aircraft_delay = sum(late_aircraft_ct, na.rm = TRUE)
  )

# Calculate percentages for delay reasons
delay_percentages <- delay_reasons / total_delayed_flights * 100

# Create the summary table with detailed sections for delays
summary_table <- data.frame(
  Characteristic = c("Total Months of Data (August)", 
                     "Total Carriers", 
                     "Total Arrived Flights (Count Data)",
                     "Total Delayed Flights (15+ min)", 
                     "  - Carrier Delays",                 
                     "  - Weather Delays",                 
                     "  - NAS Delays",                     
                     "  - Security Delays",                
                     "  - Late Aircraft Delays",           
                     "Total Cancelled Flights", 
                     "Total Diverted Flights",
                     "Cancelled Flights (%)", 
                     "Diverted Flights (%)"),
  Value = c(1,  # Total months (August)
            length(unique(AirlineDelays$carrier)), 
            round(total_arrived_flights, 2), 
            round(total_delayed_flights, 2),  
            round(delay_reasons$carrier_delay, 2),  
            round(delay_reasons$weather_delay, 2),  
            round(delay_reasons$nas_delay, 2),      
            round(delay_reasons$security_delay, 2), 
            round(delay_reasons$late_aircraft_delay, 2), 
            round(total_cancelled_flights, 2), 
            round(total_diverted_flights, 2),
            round((total_cancelled_flights / total_arrived_flights) * 100, 2), 
            round((total_diverted_flights / total_arrived_flights) * 100, 2))
)

# Format the delay reasons to include percentages in parentheses
summary_table$Characteristic[5:9] <- paste0(
  summary_table$Characteristic[5:9], 
  " (", round(delay_percentages, 2), "%)"
)

# Display the summary table
kable(summary_table, caption = "Table 1: Summary of Flight Arrivals, Delays, Cancellations, and Diversions (August Data)", 
      format.args = list(big.mark = ",", scientific = FALSE))
```

### Summary of Table 1:

Dataset 1 takes a deep dive into the airline data, offering interesting
insights into how different airlines performed. The dataset is made up
of information regarding flight arrivals and delays across various U.S.
airports, focusing specifically on data from August 2023. It includes a
total of 171,666 observations with a variety of relevant variables
related to airline performance. Overall, there were a whopping
62,146,805 arriving flights, showing just how busy the skies were.
However, not everything went smoothly; 11,375,095 of those flights were
delayed by at least 15 minutes, which is a significant number and
definitely impacts travelers.

When I looked at the reasons for these delays, it became clear that most
were due to issues on the airlines' end, with 3,565,081 flights (31.34%)
delayed because of carrier-related problems. Weather played a role too,
causing delays for 385,768 flights (3.39%). National Airspace System
delays accounted for another 3,322,433 flights (29.21%). Security delays
were relatively minor, affecting just 26,930 flights (0.24%), while late
arrivals of other aircraft were responsible for 4,074,891 flights
(35.82%).

On the cancellation front, there were 1,290,923 flights that were called
off, which is about 2.08% of all arriving flights. Additionally, 148,007
flights were diverted, a small fraction as well.

These numbers highlight the challenges that airlines face, especially
with delays stemming mainly from their own operations. While weather and
air traffic issues also contribute, itâ€™s clear that improving airline
efficiency could make a real difference. Overall, the relatively low
rates of cancellations and diversions suggest that, despite the delays,
the month appears to have been fairly stable for airline operations.

```{r}
library(dplyr)
library(knitr)

# Summarize the dataset by carrier
summary_by_airline <- AirlineDelays %>%
  group_by(carrier, carrier_name) %>%
  summarise(
    total_flights = sum(arr_flights, na.rm = TRUE),
    delayed_flights = sum(arr_del15, na.rm = TRUE),
    cancelled_flights = sum(arr_cancelled, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  mutate(
    on_time_flights = total_flights - delayed_flights,
    on_time_percentage = round((on_time_flights / total_flights) * 100, 0),
    delayed_percentage = round((delayed_flights / total_flights) * 100, 0),
    cancelled_percentage = round((cancelled_flights / total_flights) * 100, 0)
  )

# Create a new table with selected columns
table1 <- summary_by_airline %>%
  select(carrier, carrier_name, on_time_flights, on_time_percentage, 
         delayed_flights, delayed_percentage, 
         cancelled_flights, cancelled_percentage)

# Display the summary table
kable(table1, caption = "Table 2: Flight Summary by Airline (August 2023)", 
      format.args = list(big.mark = ",", scientific = FALSE))
```

```{r}
library(dplyr)
library(ggplot2)
library(tidyr)

# Summarize the dataset by carrier
summary_by_airline <- AirlineDelays %>%
  group_by(carrier, carrier_name) %>%
  summarise(
    total_flights = sum(arr_flights, na.rm = TRUE),
    delayed_flights = sum(arr_del15, na.rm = TRUE),
    cancelled_flights = sum(arr_cancelled, na.rm = TRUE),
    .groups = 'drop'  # Prevent grouping warnings
  )

# Calculate proportions
summary_by_airline <- summary_by_airline %>%
  mutate(
    delayed_proportion = delayed_flights / total_flights,
    cancelled_proportion = cancelled_flights / total_flights
  ) %>%
  select(carrier, carrier_name, total_flights, delayed_proportion, cancelled_proportion)

# Reshape data for plotting
summary_long <- summary_by_airline %>%
  pivot_longer(cols = c(delayed_proportion, cancelled_proportion),
               names_to = "Flight_Status",
               values_to = "Proportion")

# Create the bar plot
ggplot(summary_long, aes(x = reorder(carrier_name, -Proportion), y = Proportion, fill = Flight_Status)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Flight Status Proportions by Airline (August 2023)",
       x = "Airline",
       y = "Proportion of Flights",
       fill = "Flight Status") +
  scale_y_continuous(labels = scales::label_percent()) +  # Format y-axis as percentage
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
# Summarize the dataset by carrier
summary_by_airline <- AirlineDelays %>%
  group_by(carrier, carrier_name) %>%
  summarise(
    total_flights = sum(arr_flights, na.rm = TRUE),
    delayed_flights = sum(arr_del15, na.rm = TRUE),
    cancelled_flights = sum(arr_cancelled, na.rm = TRUE),
    .groups = 'drop'  # Prevent grouping warnings
  )

# Calculate total counts for pie chart
total_counts <- summary_by_airline %>%
  summarise(
    total_flights = sum(total_flights),
    delayed_flights = sum(delayed_flights),
    cancelled_flights = sum(cancelled_flights)
  ) %>%
  mutate(on_time_flights = total_flights - (delayed_flights + cancelled_flights)) %>%
  select(-total_flights) %>%  # Remove total_flights if not needed in the pie chart
  pivot_longer(cols = everything(), names_to = "Flight_Status", values_to = "Count")

# Create the pie chart
ggplot(total_counts, aes(x = "", y = Count, fill = Flight_Status)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  labs(title = "Proportion of Flight Status (August 2023)",
       fill = "Flight Status") +
  theme_minimal() +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_blank())


```

```{r}
# Load necessary libraries
library(dplyr)
library(tidyr)
library(ggplot2)

# Summarize reasons for delays
delay_reasons <- AirlineDelays %>%
  summarise(
    Carrier_Delay = sum(carrier_ct, na.rm = TRUE),
    Weather_Delay = sum(weather_ct, na.rm = TRUE),
    NAS_Delay = sum(nas_ct, na.rm = TRUE),
    Security_Delay = sum(security_ct, na.rm = TRUE),
    Late_Aircraft_Delay = sum(late_aircraft_ct, na.rm = TRUE)
  )

# Reshape the data for plotting
delay_reasons_long <- pivot_longer(delay_reasons, cols = everything(), 
                                    names_to = "Reason", values_to = "Count")

# Create the bar chart
ggplot(delay_reasons_long, aes(x = Reason, y = Count, fill = Reason)) +
  geom_bar(stat = "identity") +
  labs(title = "Reasons for Flight Delays (August 2023)",
       x = "Reason for Delay",
       y = "Number of Delays") +
  scale_y_continuous(labels = scales::comma) +  # Format y-axis labels as whole numbers
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
citation()
```

```{r}
options(repos = c(CRAN = "https://cloud.r-project.org/"))
install.packages("brms")
library(brms)
library(dplyr)

#Clean the data: Handle missing values and outliers, Filter out any irrelevant data (e.g., non-weather-related delays)
AirlineDelays1 <- AirlineDelays %>%
    filter(!is.na(arr_delay), !is.na(weather_ct), !is.na(carrier_ct), !is.na(nas_ct))

#Set Up the Model: Define dependent variable (arr_delay) and independent variables (weather_ct, carrier_ct, and nas_ct).
formula <- arr_delay ~ weather_ct + carrier_ct + nas_ct

#Fit the Bayesian Model
model <- brm(formula, data = AirlineDelays, family = gaussian(),
             prior = set_prior("normal(0, 5)", class = "b"),
             chains = 4, iter = 2000, warmup = 1000)

#Model Summary and Diagnostics
summary(model) #Model Summary
plot(model) #Check for Convergence

```

## Dataset 2

<https://github.com/YBI-Foundation/Dataset/blob/main/Airline%20Delay.csv>

```{r}
AirDelays <- read.csv("Airline Delay.csv")
head(AirDelays)
```

```{r}
dim(AirDelays)
```

```{r}
tail(AirDelays)
```

This dataset contains detailed information about flight arrivals and
delays for U.S. airports, specifically for the months of December 2019
and December 2020. Here are the key components of the dataset:

-   **Dimensions:** The dataset consists of 3,351 rows and 21 columns,
    capturing data for multiple airlines and airports.

-   **Columns:**

    -   **year, month:** The year and month of the recorded flights.

    -   **carrier, carrier_name:** The airline's code and full name.

    -   **airport, airport_name:** The airport code and full name.

    -   **arr_flights:** The total number of arriving flights.

    -   **arr_del15:** The number of flights delayed by over 15 minutes.

    -   **carrier_ct, weather_ct, nas_ct, security_ct,
        late_aircraft_ct:** Counts of delays attributed to various
        causes.

    -   **arr_cancelled:** Number of canceled flights.

    -   **arr_diverted:** Number of diverted flights.

    -   **arr_delay:** Total delay time in minutes.

    -   **carrier_delay, weather_delay, nas_delay, security_delay,
        late_aircraft_delay:** Breakdown of delays by specific causes.

-   **Insights:**

    -   The dataset allows for analysis of flight performance by
        different carriers across various airports.

    -   It can be used to identify trends in delays, cancellations, and
        the reasons behind them, providing insights into factors
        affecting the aviation industry during these months.
